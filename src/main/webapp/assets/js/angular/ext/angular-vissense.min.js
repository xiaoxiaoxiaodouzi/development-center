!function(a){a.module("angular-vissense.config",[]).value("angularVissenseConfig",{debug:!0}),a.module("angular-vissense.services",[]),a.module("angular-vissense.directives",["angular-vissense.services"]),a.module("angular-vissense.directives.debug",[]),a.module("angular-vissense",["angular-vissense.config","angular-vissense.directives","angular-vissense.services"])}(angular),function(a){a.module("angular-vissense.directives").directive("vissenseMonitor",["VisSense","VisUtils",function(a,b){var c={scope:{monitor:"=?ngModel",config:"=",onStart:"&",onStop:"&",onUpdate:"&",onHidden:"&",onVisible:"&",onFullyvisible:"&",onPercentagechange:"&",onVisibilitychange:"&"},link:function(c,d){var e=b.throttle(function(){c.$digest(),c.$parent.$digest()},1e3);d.addClass("vissense-monitor"),c.monitor=new a(d[0],c.config).monitor({start:function(a){c.onStart({monitor:a})},stop:function(a){c.onStop({monitor:a})},update:function(a){c.onUpdate({monitor:a}),e()},hidden:function(a){c.onHidden({monitor:a})},visible:function(a){c.onVisible({monitor:a})},fullyvisible:function(a){c.onFullyvisible({monitor:a})},percentagechange:function(a,b,d){c.onPercentagechange({monitor:a,newValue:b,oldValue:d})},visibilitychange:function(a){c.onVisibilitychange({monitor:a}),d.removeClass("vissense-monitor-hidden"),d.removeClass("vissense-monitor-fullyvisible"),d.removeClass("vissense-monitor-visible"),a.state().fullyvisible?d.addClass("vissense-monitor-fullyvisible"):a.state().hidden?d.addClass("vissense-monitor-hidden"):d.addClass("vissense-monitor-visible")}}).startAsync(),c.$on("$destroy",function(){c.monitor.stop()})}};return c}])}(angular),function(a){a.module("angular-vissense.directives.debug").directive("vissenseMetricsInfocard",["VisSense","VisUtils",function(a,b){if(!b.isFunction(a.VisMon.Strategy.MetricsStrategy))throw new Error("Cannot load MetricsStrategy. Is it included?");if(!b.isFunction(a.VisMon.Strategy.MetricsStrategy))throw new Error("Cannot load MetricsStrategy. Is it included?");var c={scope:{elementId:"@vissenseMetricsInfocard",inactiveAfter:"@",hidden:"@"},controller:["$scope","$interval","VisSenseService",function(c,d,e){var f,g,h,i,j,k;c.model={inactiveAfter:(parseInt(c.inactiveAfter,10)||3e4)-1},f=e.fromId(c.elementId,{hidden:c.hidden}),g=[new a.VisMon.Strategy.PollingStrategy({interval:99}),new a.VisMon.Strategy.EventStrategy({debounce:30}),new a.VisMon.Strategy.MetricsStrategy],b.isFunction(a.VisMon.Strategy.UserActivityStrategy)&&(h=new a.VisMon.Strategy.UserActivityStrategy({inactiveAfter:c.model.inactiveAfter}),g.push(h)),i=f.monitor({strategy:g,visibilitychange:b.debounce(function(a){c.$apply(function(){var b=a.state();c.code=b.code,c.state=b.state})},0)}).start(),j=b.debounce(function(){var a=i.metrics();c.$apply(function(){c.timeHidden=a.getMetric("time.hidden").get(),c.timeVisible=a.getMetric("time.visible").get(),c.timeFullyVisible=a.getMetric("time.fullyvisible").get(),c.timeRelativeVisible=a.getMetric("time.relativeVisible").get(),c.duration=a.getMetric("time.duration").get(),c.percentage={current:a.getMetric("percentage").get(),max:a.getMetric("percentage.max").get(),min:a.getMetric("percentage.min").get()}})},0),k=d(j,100),c.$on("$destroy",function(){i.stop(),d.cancel(k)})}],template:'<style>.vissense-metrics-container {margin: 0px;position: fixed;left: 42px;bottom: 13px;width: 600px;height: 200px;box-shadow: 1px 1px 1px 2px rgba(99, 99, 99, 0.4);z-index: 99999;background-color: rgba(242,242,242,0.9);}.vissense-flexbox {display: box;display: -webkit-box;display: -moz-box;box-orient: horizontal;-webkit-box-orient: horizontal;-moz-box-orient: horizontal;}.vissense-flexbox .box {font-size: 23px;padding: 10px;width: 150px;text-align: center;}.vissense-flexbox .vissense-box small {color: #888;}</style><div class="vissense-metrics-container"><div style="text-align:center"><span>state: <span data-ng-style="{ color : code > 0 ? \'green\' : \'red\'}">{{state}}</span></span> | <span data-vissense-user-activity data-inactive-after="{{model.inactiveAfter}}"></span></div><div class="vissense-flexbox"><div class="box"><div>{{timeVisible / 1000 | number:1}}s</div><small>time visible</small></div><div class="box"><div>{{timeFullyVisible / 1000 | number:1}}s</div><small>time fullyvisible</small></div><div class="box"><div>{{timeHidden * 100 / duration | number:0}}%</div><small>percentage hidden</small></div><div class="box"><div>{{timeVisible * 100 / duration | number:0}}%</div><small>percentage visible</small></div></div><div class="vissense-flexbox"><div class="box"><div>{{timeHidden / 1000 | number:1}}s</div><small>time hidden</small></div><div class="box"><div>{{timeRelativeVisible / 1000 | number:1}}s</div><small>time relative</small></div><div class="box"><div>{{percentage.min * 100 | number:0}}%</div><small>percentage min</small></div><div class="box"><div>{{percentage.max * 100 | number:0}}%</div><small>percentage max</small></div></div></div>'};return c}])}(angular),function(a){a.module("angular-vissense.directives.debug").directive("vissensePercentageTimeTest",["VisSenseService",function(a){var b={scope:{elementId:"@vissensePercentageTimeTest",timeLimit:"@",percentageLimit:"@",interval:"@"},controller:["$scope",function(b){var c=a.fromId(b.elementId);b.passed=!1,c.onPercentageTimeTestPassed(function(){b.$apply(function(){b.passed=!0})},{percentageLimit:b.percentageLimit||.5,timeLimit:b.timeLimit||1e3,interval:b.interval||100})}],template:"<span>{{percentageLimit * 100 | number:0}}/{{timeLimit / 1000 | number:0}} test: <span data-ng-style=\"{ color : passed ? 'green' : 'red'}\">{{passed}}</span></span>"};return b}]).directive("vissenseFiftyOneTest",[function(){var a={scope:{elementId:"@vissenseFiftyOneTest"},template:'<span data-vissense-percentage-time-test="{{elementId}}" data-percentage-limit="0.5" data-time-limit="1000" data-interval="100"></span>'};return a}]).directive("vissenseSixtyOneTest",[function(){var a={scope:{elementId:"@vissenseSixtyOneTest"},template:'<span data-vissense-percentage-time-test="{{elementId}}" data-percentage-limit="0.6" data-time-limit="1000" data-interval="100"></span>'};return a}])}(angular),function(a){a.module("angular-vissense.directives.debug").directive("vissensePercentage",["VisSenseService","VisUtils","$timeout",function(a,b,c){var d={scope:{elementId:"@vissensePercentage"},controller:["$scope",function(d){d.percentage="?",c(function(){var c=a.fromId(d.elementId).monitor({percentagechange:b.debounce(function(){d.$apply(function(){d.percentage=c.state().percentage})},10)}).start();d.$on("$destroy",function(){c.stop()})})}],template:"<span>{{percentage * 100 | number:0}}%</span>"};return d}])}(angular),function(a){a.module("angular-vissense.directives.debug").directive("vissenseState",["VisSenseService","VisUtils","$timeout",function(a,b,c){var d={scope:{elementId:"@vissenseState",fullyvisible:"@",hidden:"@",strategy:"@"},link:function(d){d.state="?",c(function(){var c=a.fromId(d.elementId,{fullyvisible:parseFloat(d.fullyvisible)||1,hidden:parseFloat(d.hidden)||0}).monitor({visibilitychange:b.debounce(function(a){d.$apply(function(){d.state=a.state().state})},10)}).start();d.$on("$destroy",function(){c.stop()})})},template:"<span>{{state}}</span>"};return d}]).directive("vissenseStateDebug",["VisSenseService","VisUtils","$timeout",function(a,b,c){var d={scope:{elementId:"@vissenseStateDebug"},controller:["$scope",function(d){d.state={},c(function(){var c=a.fromId(d.elementId).monitor({update:b.debounce(function(a){d.$apply(function(){d.state=a.state()})},10)}).start();d.$on("$destroy",function(){c.stop()})})}],template:"{{ state | json }}"};return d}])}(angular),function(a){a.module("angular-vissense.directives.debug").directive("vissenseUserActivity",["VisSense","VisUtils",function(a,b){var c={scope:{inactiveAfter:"@",debounce:"@"},controller:["$scope",function(c){if(c.active=!0,c.installed=b.isFunction(a.UserActivity),c.installed){c.options={inactiveAfter:parseInt(c.inactiveAfter,10)||3e4,debounce:parseInt(c.debounce,10)||50,update:b.debounce(function(a){c.active=a.isActive(),c.$digest()},10)};var d=new a.UserActivity(c.options).start();c.$on("$destroy",function(){d.stop()})}}],template:"<span>user active: <span data-ng-style=\"{ color : active ? 'green' : 'red'}\">{{active}}</span><span data-ng-if=\"!installed\"> (not installed)</span></span>"};return c}])}(angular),function(a){a.module("angular-vissense.services").factory("VisSense",["$window",function(a){return a.VisSense}]).factory("VisUtils",["VisSense",function(a){return a.Utils}]).factory("VisSenseService",["VisSense",function(b){var c=function(c,d){var e=a.element("#"+c);return e.length<1||!e[0]?null:new b(e[0],d)};return{fromId:c}}])}(angular);