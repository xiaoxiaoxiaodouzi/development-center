<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.chinacreator.c2.project.issue.IssueCommentMapper">	

<!-- ElementID:column_sql,Generated=true -->
<sql id="column_sql">
		  c2_comunity_issue_comments.id ,
		  c2_comunity_issue_comments.issue_id ,
		  c2_comunity_issue_comments.author_id ,
		  c2_comunity_issue_comments.createtime ,
		  c2_comunity_issue_comments.content 
</sql>

<!-- ElementID:whereClause_sql,Generated=true -->
<sql id="whereClause_sql">
	    <if test="id != null">and c2_comunity_issue_comments.id = #{id}</if>
	    <if test="issueId != null">and c2_comunity_issue_comments.issue_id = #{issueId}</if>
	    <if test="authorId != null">and c2_comunity_issue_comments.author_id = #{authorId}</if>
	    <if test="createtime != null">and c2_comunity_issue_comments.createtime = #{createtime}</if>
</sql>


<!-- ElementID:IssueCommentResult,Generated=true -->
<resultMap id="IssueCommentResult" type="com.chinacreator.c2.project.issue.IssueComment">
	<id property="id" column="id"/>
	<result property="issueId" column="issue_id"/>
	<result property="authorId" column="author_id"/>
	<result property="createtime" column="createtime"/>
	<result property="content" column="content"/>
</resultMap>





<!-- ElementID:insert,Generated=true -->
<insert id="insert" parameterType="com.chinacreator.c2.project.issue.IssueComment" useGeneratedKeys="true">
	<selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
        select LAST_INSERT_ID()
    </selectKey>
insert into c2_comunity_issue_comments(
		<trim prefixOverrides=",">
		    <if test="issueId != null">issue_id</if>
		    <if test="authorId != null">,author_id</if>
		    <if test="createtime != null">,createtime</if>
		    <if test="content != null">,content</if>
		</trim>
	 )
	 values (
		<trim prefixOverrides=",">
		    <if test="issueId != null">#{issueId,jdbcType=NUMERIC}</if>
		    <if test="authorId != null">,#{authorId,jdbcType=VARCHAR}</if>
		    <if test="createtime != null">,#{createtime,jdbcType=TIMESTAMP}</if>
		    <if test="content != null">,#{content,jdbcType=CLOB}</if>
        </trim>
	 )
</insert>

<!-- ElementID:count,Generated=true -->
<select id="count" parameterType="com.chinacreator.c2.project.issue.IssueComment" resultType="int">
	select count(*) from c2_comunity_issue_comments 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<!-- ElementID:update,Generated=true -->
<update id="update" parameterType="com.chinacreator.c2.project.issue.IssueComment">
	update c2_comunity_issue_comments
<set>
	<if test="issueId != null">issue_id=#{issueId,jdbcType=NUMERIC},</if>
	<if test="authorId != null">author_id=#{authorId,jdbcType=VARCHAR},</if>
	<if test="createtime != null">createtime=#{createtime,jdbcType=TIMESTAMP},</if>
	<if test="content != null">content=#{content,jdbcType=CLOB}</if>
</set>
<where>
	<choose>
        <when test="id != null">and id = #{id}</when>
        <otherwise>and id = </otherwise>
    </choose>
</where>
</update>

<!-- ElementID:delete,Generated=true -->
<delete id="delete" parameterType="com.chinacreator.c2.project.issue.IssueComment">
    delete from c2_comunity_issue_comments where 1=1 and id = #{id}
</delete>

<!-- ElementID:select,Generated=true -->
<select id="select" parameterType="com.chinacreator.c2.project.issue.IssueComment" resultMap="IssueCommentResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue_comments 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:insertBatch,Generated=true -->
<insert id="insertBatch" parameterType="list" useGeneratedKeys="true">
	insert into c2_comunity_issue_comments (issue_id,author_id,createtime,content)
			values 
			<foreach collection="list" item="entity" index="index" separator=",">
				(
		         #{entity.issueId,jdbcType = NUMERIC},
		         #{entity.authorId,jdbcType = VARCHAR},
		         #{entity.createtime,jdbcType = TIMESTAMP},
		         #{entity.content,jdbcType = CLOB}
				)
</foreach>
</insert>

<!-- ElementID:deleteBatch,Generated=true -->
<delete id="deleteBatch" parameterType="List">
	delete from c2_comunity_issue_comments where id in
<trim prefix="(" suffix=")" suffixOverrides=",">
<foreach collection="list" item="entity" separator=",">
	#{entity.id}
</foreach>
</trim>
</delete>




<!-- ElementID:selectAll,Generated=true -->
<select id="selectAll" resultMap="IssueCommentResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue_comments 
</select>

<!-- ElementID:selectMany,Generated=true -->
<select id="selectMany" parameterType="list" resultMap="IssueCommentResult">
select 
	<include refid="column_sql"/> 
	from c2_comunity_issue_comments 
	where c2_comunity_issue_comments.id in (
		select distinct id from c2_comunity_issue_comments inner join
<foreach collection="list" item="entity" separator="inner join">
		(select 
			distinct id
			from c2_comunity_issue_comments 
			<where>
	        <if test="entity.id != null">and c2_comunity_issue_comments.id = #{entity.id}</if>
	        <if test="entity.issueId != null">and c2_comunity_issue_comments.issue_id = #{entity.issueId}</if>
	        <if test="entity.authorId != null">and c2_comunity_issue_comments.author_id = #{entity.authorId}</if>
	        <if test="entity.createtime != null">and c2_comunity_issue_comments.createtime = #{entity.createtime}</if>
			</where>
		) ${entity.tableAlias} using (id)
</foreach>
)
</select>

<!-- ElementID:selectByID,Generated=true -->
<select id="selectByID" parameterType="java.lang.Integer" resultMap="IssueCommentResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue_comments 
		 where c2_comunity_issue_comments.id = #{id,jdbcType=NUMERIC}
</select>

<!-- ElementID:selectByPage,Generated=true -->
<select id="selectByPage" parameterType="com.chinacreator.c2.project.issue.IssueComment" resultMap="IssueCommentResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue_comments 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<select id="selectIssueCommentByIssueId" parameterType="java.lang.String" resultMap="issueCommentMap">
select id,
       issue_id,
       author_id,
       createtime,
       content,
       (select u.user_realname from td_sm_user u where u.user_id = author_id) as author
	from c2_comunity_issue_comments
	where issue_id = #{issueId}
	order by createtime 
</select>

<resultMap type="java.util.HashMap" id="issueCommentMap">
	<id property="id" column="ID" jdbcType="VARCHAR"/>
	<result property="issueId" column="ISSUE_ID" jdbcType="VARCHAR"/>
	<result property="authorId" column="AUTHOR_ID" jdbcType="VARCHAR"/>
	<result property="author" column="AUTHOR" jdbcType="VARCHAR"/>
	<result property="createtime" column="CREATETIME" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
	<result property="content" column="CONTENT" javaType="java.lang.String" jdbcType="CLOB"/>
</resultMap>

<!--Generated=true-->
<update id="updateNull" parameterType="map">
	update c2_comunity_issue_comments
	<set>
		<trim suffixOverrides=",">
		    <if test="issueId==null">issue_id = null,</if>
		    <if test="authorId==null">author_id = null,</if>
		    <if test="createtime==null">createtime = null,</if>
		    <if test="content==null">content = null,</if>
		</trim>
	</set>
	<where>
		<choose>
			<when test="id != null">and id = #{id}</when>
			<otherwise>and id = </otherwise>
		</choose>
	</where>
</update>
</mapper>