<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.chinacreator.c2.project.issue.IssueMapper">	

<!-- ElementID:column_sql,Generated=true -->
<sql id="column_sql">
		  c2_comunity_issue.id ,
		  c2_comunity_issue.title ,
		  c2_comunity_issue.project ,
		  c2_comunity_issue.status 
</sql>

<!-- ElementID:whereClause_sql,Generated=true -->
<sql id="whereClause_sql">
	    <if test="id != null">and c2_comunity_issue.id = #{id}</if>
	    <if test="title != null">and c2_comunity_issue.title = #{title}</if>
	    <if test="project != null">and c2_comunity_issue.project = #{project}</if>
	    <if test="status != null">and c2_comunity_issue.status = #{status}</if>
</sql>


<!-- ElementID:IssueResult,Generated=true -->
<resultMap id="IssueResult" type="com.chinacreator.c2.project.issue.Issue">
	<id property="id" column="id"/>
	<result property="title" column="title"/>
	<result property="project" column="project"/>
	<result property="status" column="status"/>
</resultMap>





<!-- ElementID:insert,Generated=true -->
<insert id="insert" parameterType="com.chinacreator.c2.project.issue.Issue" useGeneratedKeys="true">
	<selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
        select LAST_INSERT_ID()
    </selectKey>
insert into c2_comunity_issue(
		<trim prefixOverrides=",">
		    <if test="title != null">title</if>
		    <if test="project != null">,project</if>
		    <if test="status != null">,status</if>
		</trim>
	 )
	 values (
		<trim prefixOverrides=",">
		    <if test="title != null">#{title,jdbcType=VARCHAR}</if>
		    <if test="project != null">,#{project,jdbcType=NUMERIC}</if>
		    <if test="status != null">,#{status,jdbcType=CHAR}</if>
        </trim>
	 )
</insert>

<!-- ElementID:count,Generated=true -->
<select id="count" parameterType="com.chinacreator.c2.project.issue.Issue" resultType="int">
	select count(*) from c2_comunity_issue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<!-- ElementID:update,Generated=true -->
<update id="update" parameterType="com.chinacreator.c2.project.issue.Issue">
	update c2_comunity_issue
<set>
	<if test="title != null">title=#{title,jdbcType=VARCHAR},</if>
	<if test="project != null">project=#{project,jdbcType=NUMERIC},</if>
	<if test="status != null">status=#{status,jdbcType=CHAR}</if>
</set>
<where>
	<choose>
        <when test="id != null">and id = #{id}</when>
        <otherwise>and id = </otherwise>
    </choose>
</where>
</update>

<!-- ElementID:delete,Generated=true -->
<delete id="delete" parameterType="com.chinacreator.c2.project.issue.Issue">
    delete from c2_comunity_issue where 1=1 and id = #{id}
</delete>

<!-- ElementID:select,Generated=true -->
<select id="select" parameterType="com.chinacreator.c2.project.issue.Issue" resultMap="IssueResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:insertBatch,Generated=true -->
<insert id="insertBatch" parameterType="list" useGeneratedKeys="true">
	insert into c2_comunity_issue (title,project,status)
			values 
			<foreach collection="list" item="entity" index="index" separator=",">
				(
		         #{entity.title,jdbcType = VARCHAR},
		         #{entity.project,jdbcType = NUMERIC},
		         #{entity.status,jdbcType = CHAR}
				)
</foreach>
</insert>

<!-- ElementID:deleteBatch,Generated=true -->
<delete id="deleteBatch" parameterType="List">
	delete from c2_comunity_issue where id in
<trim prefix="(" suffix=")" suffixOverrides=",">
<foreach collection="list" item="entity" separator=",">
	#{entity.id}
</foreach>
</trim>
</delete>




<!-- ElementID:selectAll,Generated=true -->
<select id="selectAll" resultMap="IssueResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue 
</select>

<!-- ElementID:selectMany,Generated=true -->
<select id="selectMany" parameterType="list" resultMap="IssueResult">
select 
	<include refid="column_sql"/> 
	from c2_comunity_issue 
	where c2_comunity_issue.id in (
		select distinct id from c2_comunity_issue inner join
<foreach collection="list" item="entity" separator="inner join">
		(select 
			distinct id
			from c2_comunity_issue 
			<where>
	        <if test="entity.id != null">and c2_comunity_issue.id = #{entity.id}</if>
	        <if test="entity.title != null">and c2_comunity_issue.title = #{entity.title}</if>
	        <if test="entity.project != null">and c2_comunity_issue.project = #{entity.project}</if>
	        <if test="entity.status != null">and c2_comunity_issue.status = #{entity.status}</if>
			</where>
		) ${entity.tableAlias} using (id)
</foreach>
)
</select>

<!-- ElementID:selectByID,Generated=true -->
<select id="selectByID" parameterType="java.lang.Integer" resultMap="IssueResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue 
		 where c2_comunity_issue.id = #{id,jdbcType=NUMERIC}
</select>

<!-- ElementID:selectByPage,Generated=true -->
<select id="selectByPage" parameterType="com.chinacreator.c2.project.issue.Issue" resultMap="IssueResult">
	select 
		<include refid="column_sql"/>
	    from c2_comunity_issue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>
<resultMap id="IssueCommentPageResult" type="java.util.HashMap">
	<id property="id" column="id"/>
	<result property="title" column="title"/>
	<result property="project" column="project"/>
	<result property="status" column="status"/>
	<result property="authorId" column="author_id"/>
	<result property="userName" column="user_name"/>
	<result property="createTime" column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result property="content" column="content" javaType="java.lang.String" jdbcType="CLOB"/>
	<result property="milestoneTitle" column="milestone_title"/>
</resultMap>

<select id="selectIssueCommentByPage" parameterType="java.util.HashMap" resultMap="IssueCommentPageResult" useCache="false">          
	select 
		i.id,
		i.title,
		i.project,
		i.status,
		ic.author_id,
		u.user_realname user_name,
		ic.createtime,
		ic.content,
		m.title milestone_title
	 from  c2_comunity_issue i
      inner join c2_comunity_issue_comments ic on i.id=ic.issue_id
      inner join td_sm_user u on ic.author_id=u.user_id
      left join c2_comunity_issue_milestone im on im.issue_id =i.id
      left join c2_comunity_milestone m on im.milestone_id=m.id
	 <where>
	 	ic.createtime = (select min(createtime)
                       from c2_comunity_issue_comments
                      where issue_id = i.id)
	 	<if test="project != null">
			    and i.project = #{project,jdbcType=VARCHAR}
		</if>
	 	<if test="title != null">
			    and i.title like '%${title}%'
		</if>
		<if test="status != null">
			    and i.status = #{status,jdbcType=VARCHAR}
		</if>
	 	<if test="author != null">
			    and u.user_realname like '%${author}%'
		</if>
		<if test="labels != null">
			and exists(select il.issue_id from c2_comunity_label l,c2_comunity_issue_label il where il.issue_id=i.id and il.label_id=l.id and (
				<foreach collection="labels" item="entity" separator="or">
					<if test="entity != null">
			  			  l.name like '%${entity}%'
					</if>
				</foreach>
				)
			)
		</if>
		<if test="milestone != null">
			and m.title like '%${milestone}%'
		</if>
		 order by ic.createtime desc
	 </where>
</select>

<select id="selectIssueOpenCount" parameterType="java.util.HashMap" resultType="java.lang.Integer" useCache="false">
	select 
		count(*) openCount
	  from  c2_comunity_issue i
      inner join c2_comunity_issue_comments ic on i.id=ic.issue_id
      inner join td_sm_user u on ic.author_id=u.user_id
      left join c2_comunity_issue_milestone im on im.issue_id =i.id
      left join c2_comunity_milestone m on im.milestone_id=m.id
	 <where>
	 	status=1 and ic.createtime = (select min(createtime)
                       from c2_comunity_issue_comments
                      where issue_id = i.id)
	 	<if test="project != null">
			    and i.project = #{project,jdbcType=VARCHAR}
		</if>
	 	<if test="title != null">
			      and i.title like '%${title}%'
		</if>
	 	<if test="author != null">
			    and u.user_realname like '%${author}%'
		</if>
		<if test="labels != null">
			and exists(select il.issue_id from c2_comunity_label l,c2_comunity_issue_label il where il.issue_id=i.id and il.label_id=l.id and (
				<foreach collection="labels" item="entity" separator="or">
					<if test="entity != null">
			  			  l.name like '%${entity}%'
					</if>
				</foreach>
				)
			)
		</if>
		<if test="milestone != null">
			and m.title like '%${milestone}%'
		</if>
		 order by ic.createtime desc
	 </where>
</select>

<select id="selectIssueCloseCount" parameterType="java.util.HashMap" resultType="java.lang.Integer" useCache="false">
	select count(*) closeCount 
	 from  c2_comunity_issue i
      inner join c2_comunity_issue_comments ic on i.id=ic.issue_id
      inner join td_sm_user u on ic.author_id=u.user_id
      left join c2_comunity_issue_milestone im on im.issue_id =i.id
      left join c2_comunity_milestone m on im.milestone_id=m.id
	 <where>
	 	status=0 and ic.createtime = (select min(createtime)
                       from c2_comunity_issue_comments
                      where issue_id = i.id)
	 	<if test="project != null">
			    and i.project = #{project,jdbcType=VARCHAR}
		</if>
	 	<if test="title != null">
			     and i.title like '%${title}%'
		</if>
	 	<if test="author != null">
			    and u.user_realname like '%${author}%'
		</if>
		<if test="labels != null">
			and exists(select il.issue_id from c2_comunity_label l,c2_comunity_issue_label il where il.issue_id=i.id and il.label_id=l.id and (
				<foreach collection="labels" item="entity" separator="or">
					<if test="entity != null">
			  			  l.name like '%${entity}%'
					</if>
				</foreach>
				)
			)
		</if>
		<if test="milestone != null">
			and m.title like '%${milestone}%'
		</if>
		 order by ic.createtime desc
	 </where>
</select>

<select id="selectIssueByIssueId" parameterType="java.lang.String" resultMap="issueMap">
select i.id,
       i.title,
       i.project,
       i.status,
       c.author_id,
       c.createtime,
       (select u.user_realname
          from td_sm_user u
         where u.user_id = c.author_id) as author
	from c2_comunity_issue_comments c, c2_comunity_issue i
	where createtime = (select min(createtime)
                       from c2_comunity_issue_comments
                      where issue_id = i.id)
	and i.id = #{issueId}
</select>

<resultMap type="java.util.HashMap" id="issueMap">
	<id property="id" column="ID" jdbcType="BIGINT"/>
	<result property="title" column="TITLE" jdbcType="VARCHAR"/>
	<result property="project" column="PROJECT" jdbcType="VARCHAR"/>
	<result property="status" column="STATUS" jdbcType="CHAR"/>
	<result property="authorId" column="AUTHOR_ID" jdbcType="VARCHAR"/>
	<result property="createtime" column="CREATETIME" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
	<result property="author" column="AUTHOR" jdbcType="VARCHAR"/>
</resultMap>

<!--Generated=true-->
<update id="updateNull" parameterType="map">
	update c2_comunity_issue
	<set>
		<trim suffixOverrides=",">
		    <if test="title==null">title = null,</if>
		    <if test="project==null">project = null,</if>
		    <if test="status==null">status = null,</if>
		</trim>
	</set>
	<where>
		<choose>
			<when test="id != null">and id = #{id}</when>
			<otherwise>and id = </otherwise>
		</choose>
	</where>
</update>
</mapper>